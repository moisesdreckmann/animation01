@charset "UTF-8";

@keyframes rotate {
    0% {
        transform: rotate(0deg);
    }
    50% {
        transform: rotate(180deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

@keyframes impulso {
    0% {
        transform: scale(0.95);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes move {
    0% {
        left: 0;
    }
    50% {
        left: 74%;
    }
    100% {
        left: 0;
    }
}

@keyframes load {
    0% {
        width: 5px;
    }
    20% {
        width: 40px;
    }
    40% {
        width: 80px;
    }
    60% {
        width: 160px;
    }
    80% {
        width: 200px;
    }
    100% {
        width: 250px;
    }
}

@keyframes goblin {
    0%, 100% {
        background-position-x: -83px;     
    }
    50% {
        background-position-x: -41px;
    }
}

@keyframes move-down {
    0% {
        transform: translate(0px, 0px);
    }
    100% {
        transform: translate(0px, 140px);
    }
}

@keyframes move-up {
    0% {
        transform: translate(234.2px, 129.2px);
    }
    100% {
        transform: translate(234.2px, 0px);
    }
}

@keyframes move-left {
    0% {
        transform: translate(0px, 140px);
    }
    100% {
        transform: translate(234px, 140px);
    }
}

@keyframes move-right {
    0% {
        transform: translate(234.2px, 0px);
    }
    100% {
        transform: translate(0px, 0px);
    }
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    outline: none;
    border: none;
    font-family: monospace, Helvetica, sans-serif;
}

main {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

section {
    margin: auto;
    display: flex;
    flex-direction: column;
    width: 1000px;
    background-color: rgb(252, 247, 238);
    padding-block: 30px;
    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.089);
}

.container {
    margin: auto;
    margin-bottom: 30px;
    width: 300px;
    height: 200px;
    background-color: white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.089);
}

.containerPosition {
    position: relative;
}

.input1, .input2 {
    width: 280px;
    margin-bottom: 30px;
    border-bottom: 1px solid black;
    padding-left: 108px;
    color: rgb(39, 39, 39);
}

label {
    font-size: 14px;
}

#labelUser {
    position: absolute;
    top: 15%;
    left: 40%;
}

#labelPass {
    position: absolute;
    top: 38%;
    left: 40%;
}

.container:has(.input1:focus) .input1,
.container:has(.input2:focus) .input2 {
    border-bottom: 1.5px solid black;
    transition: border-bottom 0.3s;
}

.btn {
    background-color: grey;
    color: white;
    width: 120px;
    height: 40px;
    cursor: pointer;
    letter-spacing: 0.3px;
    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.089);
    transition: box-shadow 1 s linear, background-color 1s ease-in-out .2s; 
}

.btn:hover {
    border-inline: 20px solid black;
    background-color: black;
    transition: border-inline 1s ease-out, background-color 1s ease;
    animation: impulso .2s linear 1s forwards;
}

.containerLoader {
    width: 150px;
    height: 150px;
    border: 2px dashed black;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

.containerMove {
    width: 150px;
    height: 150px;
    border: 1px solid black;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    position: relative;
}

.loader {
    border-radius: 50%;
    width: 100px;
    height: 100px;
    border-top: 15px solid black;
    border-left: 15px solid black;
    border-right: 15px solid grey;
    border-bottom: 15px solid grey;
}

.loaderAnimation {
    animation: rotate 1s infinite linear;
}

.loaderAnimation2 {
    animation: rotate 1s infinite linear paused;
}

.loaderAnimation2:hover {
    animation-play-state: running;
    
}

.div1, .div2, .div3 {
    width: 40px;
    height: 40px;
    position: absolute;
    top: 35%;
    animation: move 2s infinite linear paused;
}

.div1 {
    background-color: black;
    z-index: 10;
}

.div2 {
    background-color: rgb(48, 48, 48);
    z-index: 5;
}

.div3 {
    background-color: rgba(0, 0, 0, 0.224);
    z-index: 3;
}

.containerMove:hover .div1 {
    animation-play-state: running;
}

.containerMove:hover .div2 {
    animation-play-state: running;
    animation-delay: .2s;
}

.containerMove:hover .div3 {
    animation-play-state: running;
    animation-delay: .4s;
}

.barra {
    width: 250px;
    height: 30px;
    border: 2px solid black;
    position: relative;
    cursor: pointer;
}

.barra::before {
    content: ' ';
    width: 5px;
    height: 26px;
    background-color: rgb(188, 10, 10);
    position: absolute;
    top: 0;
    left: 0;
    animation: load 3s linear 0.1s infinite paused ;
}

.barra:hover::before {
    animation-play-state: running;
}

.containerGoblin {
    width: 280px;
    height: 190px;
    border: 3px double green;
    position: relative;
}

.goblin-down, .goblin-right, .goblin-left, .goblin-up {
    width: 40px;
    height: 45px;
    margin: 0;
    background-image: url(goblin_big.png);
    background-repeat: no-repeat;
    background-clip: content-box;
    background-size: 120px 190px;
    display: none;
}

.goblin-down {
    background-position: 0px 0px;
    animation: goblin .5s infinite step-end, move-down 4s linear infinite;
}

.goblin-right {
    background-position: 0px -145px;
    animation: goblin .5s infinite step-end, move-right 4s linear infinite;
}

.goblin-up {
    background-position: 0px -48px;
    animation: goblin .5s infinite step-end, move-up 4s linear infinite;
}

.goblin-left {
    background-position: 0px -96px;
    animation: goblin .5s infinite step-end, move-left 4s linear infinite;
}